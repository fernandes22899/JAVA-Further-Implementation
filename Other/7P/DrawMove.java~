import java.util.ArrayList;
import java.util.Stack;
/**
 * DrawMove class.
 * */
public class DrawMove implements Move
{
    private Card card = null;
    private GameState gameState;
    /**
     * DrawMove constructor.
     * @param gameState GameState
     * */
    public DrawMove( GameState gameState ) 
    {
        this.gameState = gameState;
    }
    /**
     * MoveState method.
     * @return newGameState
     * 
     * */
    public GameState movedState() 
    {
        Stack<Card> drawPile = gameState.getDrawPile();
        ArrayList< Stack<Card> > piles = gameState.getPiles();
        
        if( drawPile.size() < piles.size() ) 
            throw new RuntimeException( "drawPile be biggerthan4card andnowitis"
                                           + drawPile.size() );
        
        for( int i = 0; i < piles.size(); i++ ) 
        {
            piles.get( i ).add( drawPile.pop() );
        }
        
        GameState newGameState = new GameState( drawPile, piles, 
                                               gameState.getDiscardPile() );
        return newGameState;
    }
    
    /**
     * Return string representation for a Pile; needs to be compact.
     * @return String
     */
    public String toString()
    {
        if ( card != null )
            return card.toString(); 
        else
            return "Draw";
    }  
    
    
}
